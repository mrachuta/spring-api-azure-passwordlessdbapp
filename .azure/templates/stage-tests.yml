parameters:
  - name: dependsOn
    type: object
    default: []
  - name: codeCoverageTool
    type: string
  - name: summaryFileLocation
    type: string
  - name: pathToSources
    type: string
  - name: reportDirectory
    type: string
  - name: testResultsFormat
    type: string
  - name: testResultsFiles
    type: string


stages:
- stage: Tests
  dependsOn:
  - ${{ each stage in parameters.dependsOn }}:
    - ${{ stage }}
  jobs:
  - job: UnitTests
    steps:
    - script: chmod +x ./mvnw
      displayName: 'Prepare maven wrapper'
    - script: ./mvnw clean test
      displayName: 'Run maven test phase'
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)'
        publishLocation: 'pipeline'
        # System.StageAttempt added to allow to re-run particular stage without
        # issues with already existing artifact
        artifact: MavenTestArtifacts_$(Build.BuildNumber)_$(System.StageAttempt)
      displayName: 'Stash workspace'

  - job: GenerateTestReports
    dependsOn: UnitTests
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        artifact: MavenTestArtifacts_$(Build.BuildNumber)_$(System.StageAttempt)
      displayName: 'Unstash workspace'
    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: ${{ parameters.codeCoverageTool }}
        summaryFileLocation: ${{ parameters.summaryFileLocation }}
        pathToSources: ${{ parameters.pathToSources }}
        reportDirectory: ${{ parameters.reportDirectory }}
        failIfCoverageEmpty: true
      displayName: 'Publish coverage results'
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: ${{ parameters.testResultsFormat }}
        testResultsFiles: ${{ parameters.testResultsFiles }}
        failTaskOnFailedTests: true
        failTaskOnFailureToPublishResults: true
        failTaskOnMissingResultsFile: true
      displayName: 'Publish test results'
