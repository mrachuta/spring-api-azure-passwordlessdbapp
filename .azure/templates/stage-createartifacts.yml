parameters:
  - name: dependsOn
    type: object
    default: []

stages:
- stage: CreateArtifacts
  dependsOn:
  - ${{ each stage in parameters.dependsOn }}:
    - ${{ stage }}
  jobs:
  - job: CreateJarPackage
    steps:
    - script: chmod +x ./mvnw
      displayName: 'Prepare maven wrapper'
    - script: ./mvnw package -DskipTests
      displayName: 'Run maven package phase'
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)'
        publishLocation: 'pipeline'
        # System.StageAttempt added to allow to re-run particular stage without
        # issues with already existing artifact
        artifact: MavenPackageArtifacts_$(Build.BuildNumber)_$(System.StageAttempt)
      displayName: 'Stash workspace'
  - job: CreateContainerImage
    dependsOn: CreateJarPackage
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        artifact: MavenPackageArtifacts_$(Build.BuildNumber)_$(System.StageAttempt)
      displayName: 'Unstash workspace'
      # Helpful post: https://github.com/fabric8io/docker-maven-plugin/issues/1330#issuecomment-755308720
    - script: |
         #!/bin/bash
         set -xeu -o pipefail
         export DOCKER_HOST="unix:/tmp/storage-run-$(id -u)/podman/podman.sock"
         podman system service -t 600 &
         chmod +x ./mvnw
         ./mvnw initialize docker:build
      displayName: 'Run maven docker:build goal'
    - script: echo "##vso[task.setvariable variable=IMAGE;isOutput=true]$(podman image ls --sort created --noheading --no-trunc --format '{{.Repository}}@{{.ID}}' | head -n 1)"
      name: getdockerimage
      displayName: Get Docker image
